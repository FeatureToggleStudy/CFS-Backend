{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApiKey": {
      "type": "string",
      "metadata": {
        "description": "Api key for inter services calls"
      }
    },
    "ApiEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Base url for inter service calls"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "cacheSKUName": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "defaultValue": "Basic",
      "metadata": {
        "description": "The pricing tier of the new Azure Redis Cache."
      }
    },
    "cacheSKUFamily": {
      "type": "string",
      "allowedValues": [
        "C"
      ],
      "defaultValue": "C",
      "metadata": {
        "description": "The family for the sku."
      }
    },
    "cacheSKUCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The size of the new Azure Redis Cache instance. "
      }
    }
  },
  "variables": {
    "offerType": "Standard",
    "applicationInsightsName": "[concat(resourceGroup().name, '-ai')]",
    "documentDatabaseName": "[concat(resourceGroup().name, '-db')]",
    "cacheName": "[concat(resourceGroup().name, '-redis')]",
    "eventHubName": "[concat(resourceGroup().name, '-hub')]",
    "serviceBusNamespaceName": "[concat(resourceGroup().name, 'bus')]",
    "azureSearchName": "[concat(resourceGroup().name, '-search')]",
    "datasetsFunctionAppName": "[concat(resourceGroup().name, '-fapp-datasets')]",
    "resultsFunctionAppName": "[concat(resourceGroup().name, '-fapp-results')]",
    "specsFunctionAppName": "[concat(resourceGroup().name, '-fapp-specs')]",
    "environmentFunctionAppName": "[concat(resourceGroup().name, '-fapp-environment')]",
    "calcsFunctionAppName": "[concat(resourceGroup().name, '-fapp-calcs')]",
    "scenariosFunctionAppName": "[concat(resourceGroup().name, '-fapp-scenarios')]",
    "hostingPlanName": "[concat(resourceGroup().name, '-plan')]",
    "datasetStorageAccountName": "[concat(resourceGroup().name, 'data')]",
    "datasetStorageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('datasetstorageAccountName'))]",
    "calcsStorageAccountName": "[concat(resourceGroup().name, 'calc')]",
    "calcsStorageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('calcsStorageAccountName'))]",
    "storageAccountName": "[concat(resourceGroup().name, 'storage')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "appType": "other"
      }

    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('documentDatabaseName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('documentDatabaseName')]",
        "databaseAccountOfferType": "[variables('offerType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },

    {
      "apiVersion": "2015-02-28",
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Azure Search"
      },
      "properties": {
        "sku": {
          "name": "basic"
        },
        "replicaCount": "1",
        "partitionCount": "1"
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('datasetStorageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('calcsStorageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },

    {
      "name": "[variables('cacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [],
      "tags": {
        "displayName": "cache"
      },
      "properties": {
        "sku": {
          "name": "[parameters('cacheSKUName')]",
          "family": "[parameters('cacheSKUFamily')]",
          "capacity": "[parameters('cacheSKUCapacity')]"
        }
      }
    },

    {
      "apiVersion": "2017-04-01",
      "name": "[variables('eventHubName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "isAutoInflateEnabled": "true",
        "maximumThroughputUnits": "20"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "spec-events-add-definition-relationship",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "calc-events-generate-allocations-results",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "calc-events-instruct-generate-allocations",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "calc-events-create-draft",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "dataset-events-results",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "dataset-events-datasets",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        },
        {
          "apiVersion": "2017-04-01",
          "name": "calc-events-add-relationship-to-buildproject",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubName'))]"
          ]
        }

      ]
    },

    {
      "apiVersion": "2015-08-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "properties": {},
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "spec-events",
          "type": "Topics",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "path": "spec-events"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "spec-events-calcs",
              "type": "Subscriptions",
              "dependsOn": [
                "spec-events"
              ],
              "properties": {},
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "spec-events-scenarios",
              "type": "Subscriptions",
              "dependsOn": [
                "spec-events"
              ],
              "properties": {},
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "spec-events-datasets",
              "type": "Subscriptions",
              "dependsOn": [
                "spec-events"
              ],
              "properties": {},
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "spec-events-results",
              "type": "Subscriptions",
              "dependsOn": [
                "spec-events"
              ],
              "properties": {},
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "spec-events-add-definition-relationship",
              "type": "Subscriptions",
              "dependsOn": [
                "spec-events"
              ],
              "properties": {},
              "resources": []
            }
          ]
        },
        {
          "apiVersion": "2015-08-01",
          "name": "dataset-events",
          "type": "Topics",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "path": "dataset-events"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "dataset-events-datasets",
              "type": "Subscriptions",
              "dependsOn": [
                "dataset-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='dataset-events-datasets'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "dataset-events-results",
              "type": "Subscriptions",
              "dependsOn": [
                "dataset-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='dataset-events-results'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "dataset-events-calcs",
              "type": "Subscriptions",
              "dependsOn": [
                "dataset-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='dataset-events-calcs'"
                }
              },
              "resources": []
            }
          ]
        },
        {
          "apiVersion": "2015-08-01",
          "name": "calc-events",
          "type": "Topics",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "path": "calc-events"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "calc-events-create-draft",
              "type": "Subscriptions",
              "dependsOn": [
                "calc-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='calc-events-create-draft'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "calc-events-calcs",
              "type": "Subscriptions",
              "dependsOn": [
                "calc-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='calc-events-calcs'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "calc-events-scenarios",
              "type": "Subscriptions",
              "dependsOn": [
                "calc-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='calc-events-scenarios'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "calc-events-results",
              "type": "Subscriptions",
              "dependsOn": [
                "calc-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='calc-events-results'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "calc-events-instruct-generate-allocations",
              "type": "Subscriptions",
              "dependsOn": [
                "calc-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='calc-events-instruct-generate-allocations'"
                }
              },
              "resources": []
            },
            {
              "apiVersion": "2015-08-01",
              "name": "calcs-events-generate-allocation-results",
              "type": "Subscriptions",
              "dependsOn": [
                "calc-events"
              ],
              "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                  "sqlExpression": "sys.Label='calcs-events-generate-allocation-results'"
                }
              },
              "resources": []
            }
          ]
        },
        {
          "apiVersion": "2015-08-01",
          "name": "scenario-events",
          "type": "Topics",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "path": "scenario-events"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "scenario-events-results",
              "type": "Subscriptions",
              "dependsOn": [
                "scenario-events"
              ],
              "properties": {},
              "resources": []
            }
          ]
        }

      ]
    },


    {
      "apiVersion": "2016-03-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('datasetsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('datasetsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "EventHubSettings:EventHubConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/authorizationRules'),variables('eventHubName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "datasets"
            },
            {
              "name": "ApiOptions:ApiKey",
              "value": "[parameters('ApiKey')]"
            },
            {
              "name": "ApiOptions:ApiEndpoint",
              "value": "[parameters('ApiEndpoint')]"
            },
            {
              "name": "EventHubSettings:ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "EventHubSettings:CalcsServiceBusTopicName",
              "value": "calc-events"
            },
            {
              "name": "EventHubSettings:SpecsServiceBusTopicName",
              "value": "spec-events"
            },
            {
              "name": "EventHubSettings:DatasetsServiceBusTopicName",
              "value": "dataset-events"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "DatasetStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },

    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"

      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('calcsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "EventHubSettings:EventHubConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/authorizationRules'),variables('eventHubName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "calcs"
            },
            {
              "name": "ApiOptions:ApiKey",
              "value": "[parameters('ApiKey')]"
            },
            {
              "name": "ApiOptions:ApiEndpoint",
              "value": "[parameters('ApiEndpoint')]"
            },
            {
              "name": "EventHubSettings:ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "EventHubSettings:CalcsServiceBusTopicName",
              "value": "calc-events"
            },
            {
              "name": "EventHubSettings:SpecsServiceBusTopicName",
              "value": "spec-events"
            },
            {
              "name": "EventHubSettings:DatasetsServiceBusTopicName",
              "value": "dataset-events"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "ProvidersStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('calcsStorageAccountName'), ';AccountKey=', listKeys(variables('calcsStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },

    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('resultsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('resultsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "EventHubSettings:EventHubConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/authorizationRules'),variables('eventHubName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "results"
            },
            {
              "name": "ApiOptions:ApiKey",
              "value": "[parameters('ApiKey')]"
            },
            {
              "name": "ApiOptions:ApiEndpoint",
              "value": "[parameters('ApiEndpoint')]"
            },
            {
              "name": "EventHubSettings:ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "EventHubSettings:CalcsServiceBusTopicName",
              "value": "calc-events"
            },
            {
              "name": "EventHubSettings:SpecsServiceBusTopicName",
              "value": "spec-events"
            },
            {
              "name": "EventHubSettings:DatasetsServiceBusTopicName",
              "value": "dataset-events"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('specsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('specsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "EventHubSettings:EventHubConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/authorizationRules'),variables('eventHubName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "specs"
            },
            {
              "name": "ApiOptions:ApiKey",
              "value": "[parameters('ApiKey')]"
            },
            {
              "name": "ApiOptions:ApiEndpoint",
              "value": "[parameters('ApiEndpoint')]"
            },
            {
              "name": "EventHubSettings:ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "EventHubSettings:CalcsServiceBusTopicName",
              "value": "calc-events"
            },
            {
              "name": "EventHubSettings:SpecsServiceBusTopicName",
              "value": "spec-events"
            },
            {
              "name": "EventHubSettings:DatasetsServiceBusTopicName",
              "value": "dataset-events"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }

          ]
        }
      }
    },


    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('environmentFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('environmentFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "EventHubSettings:EventHubConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/authorizationRules'),variables('eventHubName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            }
          ]
        }
      }
    },

    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('scenariosFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('scenariosFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "EventHubSettings:EventHubConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/authorizationRules'),variables('eventHubName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "scenarios"
            },
            {
              "name": "EventHubSettings:ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "EventHubSettings:CalcsServiceBusTopicName",
              "value": "calc-events"
            },
            {
              "name": "EventHubSettings:SpecsServiceBusTopicName",
              "value": "spec-events"
            },
            {
              "name": "EventHubSettings:DatasetsServiceBusTopicName",
              "value": "dataset-events"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "CosmosDbConnectionString": {
      "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]",
      "type": "string"
    },
    "AppInsightsInstrumentationKey": {
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]",
      "type": "string"
    },
    "AzureSearchKey": {
      "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]",
      "type": "string"
    }

  }

}