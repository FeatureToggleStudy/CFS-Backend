{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentKey": {
      "type": "string",
      "metadata": {
        "description": "The environment key for this particular environment eg t1dv"
      }
    },
    "ApiKeyCalcs": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Calcs Service"
      }
    },
    "ApiKeyCalcEngine": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Calc Engine Service"
      }
    },
    "ApiKeyDatasets": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Datasets Service"
      }
    },
    "ApiKeyExternal": {
      "type": "string",
      "metadata": {
        "description": "Api key for the External Service"
      }
    },
    "ApiKeyResults": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Results Service"
      }
    },
    "ApiKeyScenarios": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Scenarios Service"
      }
    },
    "ApiKeySpecs": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Specs Service"
      }
    },
    "ApiKeyTestEngine": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Test Engine Service"
      }
    },
    "ApiKeyUsers": {
      "type": "string",
      "metadata": {
        "description": "Api key for the Users Service"
      }
    },
    "apiSkuName": {
      "type": "string",
      "defaultValue": "P3v2",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4",
        "P3v3",
        "P3v2",
        "P3v1"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "apiSkuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes API plan's instance count"
      }
    },
    "apiSkuTier":{
      "type": "string",
      "defaultValue": "PremiumV2",
      "metadata": {
        "description": "Tier for API hosting plan"
      }
    },
    "apiSkuSize":{
      "type": "string",
      "defaultValue": "P3v2",
      "metadata": {
        "description": "Size for API hosting plan"
      }
    },
    "apiSkuFamily":{
      "type": "string",
      "defaultValue": "Pv2",
      "metadata": {
        "description": "Family for API hosting plan"
      }
    },
    "engineSkuName": {
      "type": "string",
      "defaultValue": "P2v2",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4",
        "P3v2",
        "P2v2",
        "P1v2"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "engineSkuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes Engine plan's instance count"
      }
    },
    "engineSkuTier":{
      "type": "string",
      "defaultValue": "PremiumV2",
      "metadata": {
        "description": "Tier for Engine hosting plan"
      }
    },
    "engineSkuSize":{
      "type": "string",
      "defaultValue": "P2v2",
      "metadata": {
        "description": "Size for Engine hosting plan"
      }
    },
    "engineSkuFamily":{
      "type": "string",
      "defaultValue": "Pv2",
      "metadata": {
        "description": "Family for Engine hosting plan"
      }
    },
    "searchSkuName": {
      "type": "string",
      "allowedValues": [
        "free",
        "basic",
        "standard"
      ],
      "defaultValue": "standard",
      "metadata": {
        "description": "The pricing tier of the Search Service"
      }
    },
    "searchReplicas": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 12,
      "metadata": {
        "description": "Total number of replicas for search"
      }
    },
    "searchPartitions": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 12,
      "metadata": {
        "description": "Total number of partitions for search"
      }
    },
    "cacheSKUName": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Basic",
      "metadata": {
        "description": "The pricing tier of the new Azure Redis Cache."
      }
    },
    "cacheSKUFamily": {
      "type": "string",
      "allowedValues": [
        "C",
        "P"
      ],
      "defaultValue": "C",
      "metadata": {
        "description": "The family for the sku. Either C = Basic/Standard or P = Premium"
      }
    },
    "cacheSKUCapacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The size of the new Azure Redis Cache instance. 1-6 for Basic/Standard or 1-4 for Premium"
      }
    },
    "AzureAdTenantId": {
      "type": "string",
      "metadata": {
        "description": "The identifier of the Azure AD Tenant."
      }
    },
    "AzureAdAudience": {
      "type": "string",
      "metadata": {
        "description": "The identifier of the audience used by the External Api."
      }
    },
    "AzureAdAuthority": {
      "type": "string",
      "defaultValue": "https://login.windows.net",
      "metadata": {
        "description": "The authority used to validate JWT Tokens."
      }
    },
    "ProviderProfilingAzureBearerTokenUrl": {
      "type": "string",
      "defaultValue": "https://login.microsoftonline.com/fcsazuresfabisgov.onmicrosoft.com/oauth2/v2.0/token",
      "metadata": {
        "description": "Url for acquiring token"
      }
    },
    "ProviderProfilingAzureBearerTokenGrantType": {
      "type": "string",
      "defaultValue": "client_credentials",
      "metadata": {
        "description": "The grant type to use for acquiring token"
      }
    },
    "ProviderProfilingAzureBearerTokenScope": {
      "type": "string",
      "metadata": {
        "description": "Scope required for acquiring token"
      }
    },
    "ProviderProfilingAzureBearerTokenClientId": {
      "type": "string",
      "metadata": {
        "description": "Client id of the profiling application"
      }
    },
    "ProviderProfilingAzureBearerTokenClientSecret": {
      "type": "string",
      "metadata": {
        "description": "Client secret of the profiling application"
      }
    },
    "ProviderProfilingApiUrl": {
      "type": "string",
      "metadata": {
        "description": "Api url of the profiling application"
      }
    }
  },
  "variables": {
    "offerType": "Standard",
    "applicationInsightsName": "[concat('ai-', parameters('environmentKey'), '-cfs')]",
    "documentDatabaseName": "[concat('cos-', parameters('environmentKey'),'-cfs')]",
    "cacheName": "[concat('rc-', parameters('environmentKey'),'-cfs')]",
    "serviceBusNamespaceName": "[concat('ns-', parameters('environmentKey'), '-cfs')]",
    "azureSearchName": "[concat('ss-', parameters('environmentKey'), '-cfs')]",
    "datasetsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-datasets')]",
    "resultsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-results')]",
    "specsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-specs')]",
    "calcsFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-calcs')]",
    "calcEngineFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-calcengine')]",
    "testEngineFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-testengine')]",
    "scenariosFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-scenarios')]",
    "usersFunctionAppName": "[concat('fa-', parameters('environmentKey'), '-users')]",
    "datasetsApiAppName": "[concat('app-', parameters('environmentKey'), '-datasets')]",
    "resultsApiAppName": "[concat('app-', parameters('environmentKey'), '-results')]",
    "specsApiAppName": "[concat('app-', parameters('environmentKey'), '-specs')]",
    "calcsApiAppName": "[concat('app-', parameters('environmentKey'), '-calcs')]",
    "calcEngineApiAppName": "[concat('app-', parameters('environmentKey'), '-calcengine')]",
    "testEngineApiAppName": "[concat('app-', parameters('environmentKey'), '-testengine')]",
    "scenariosApiAppName": "[concat('app-', parameters('environmentKey'), '-scenarios')]",
    "usersApiAppName": "[concat('app-', parameters('environmentKey'), '-users')]",
    "externalApiAppName": "[concat('app-', parameters('environmentKey'), '-external')]",
    "hostingPlanName": "[concat('asp-', parameters('environmentKey'), '-cfsapi')]",
    "engineHostingPlanName": "[concat('asp-', parameters('environmentKey'), '-engine')]",
    "datasetStorageAccountName": "[concat('strg', parameters('environmentKey'), 'datasets')]",
    "datasetStorageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('datasetstorageAccountName'))]",
    "storageAccountName": "[concat('strg', parameters('environmentKey'), 'functions')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "appType": "other"
      }
    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('documentDatabaseName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('documentDatabaseName')]",
        "databaseAccountOfferType": "[variables('offerType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "apiVersion": "2015-02-28",
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Azure Search"
      },
      "properties": {
        "sku": {
          "name": "[parameters('searchSkuName')]"
        },
        "replicaCount": "[parameters('searchReplicas')]",
        "partitionCount": "[parameters('searchPartitions')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('datasetStorageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "name": "[variables('cacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [],
      "tags": {
        "displayName": "cache"
      },
      "properties": {
        "sku": {
          "name": "[parameters('cacheSKUName')]",
          "family": "[parameters('cacheSKUFamily')]",
          "capacity": "[parameters('cacheSKUCapacity')]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[resourceGroup().location]",
      "properties": {},
      "resources": [
        {
          "type": "topics",
          "name": "edit-specification",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "edit-specification"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "calculation-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-scenario-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-scenario-result-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-specification"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            }
          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "topics",
          "name": "edit-calculation",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "defaultMessageTimeToLive": "P14D",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "enableBatchedOperations": true,
            "status": "Active",
            "supportOrdering": true,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false,
            "path": "edit-calculation"
          },
          "resources": [
            {
              "apiVersion": "2017-04-01",
              "name": "calcs-calculation-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-calculation"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            },
            {
              "apiVersion": "2017-04-01",
              "name": "test-scenario-update",
              "type": "Subscriptions",
              "dependsOn": [
                "edit-calculation"
              ],
              "properties": {
                "lockDuration": "PT5M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": true,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true
              },
              "resources": []
            }
          ],
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-instruct-generate-allocations",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-generate-allocations-results",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "test-events-execute-tests",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 5120,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "spec-events-add-definition-relationship",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "dataset-events-datasets",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "dataset-validate",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 5,
            "enablePartitioning": false,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-create-draft",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "calc-events-add-relationship-to-buildproject",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "publish-provider-results",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 2048,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        },
        {
          "type": "queues",
          "name": "fetch-provider-profile",
          "apiVersion": "2017-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "enablePartitioning": true,
            "enableExpress": false
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('apiSkuName')]",
        "capacity": "[parameters('apiSkuCapacity')]",
        "tier": "[parameters('apiSkuTier')]",
        "size": "[parameters('apiSkuSize')]",
        "family": "[parameters('apiSkuFamily')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[variables('engineHostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "EngineHostingHostingPlan"
      },
      "sku": {
        "name": "[parameters('engineSkuName')]",
        "capacity": "[parameters('engineSkuCapacity')]",
        "tier": "[parameters('engineSkuTier')]",
        "size": "[parameters('engineSkuSize')]",
        "family": "[parameters('engineSkuFamily')]"
      },
      "properties": {
        "name": "[variables('engineHostingPlanName')]"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('datasetsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('datasetsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "datasets"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "DatasetStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('calcsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "calcs"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcEngineFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('calcEngineFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('testEngineFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('testEngineFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "scenariosClient:ApiKey",
              "value": "[parameters('ApiKeyScenarios')]"
            },
            {
              "name": "scenariosClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-scenarios.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "testresults"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('resultsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('resultsFunctionAppName'))]"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:Url",
              "value": "[parameters('ProviderProfilingAzureBearerTokenUrl')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:GrantType",
              "value": "[parameters('ProviderProfilingAzureBearerTokenGrantType')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:Scope",
              "value": "[parameters('ProviderProfilingAzureBearerTokenScope')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:ClientId",
              "value": "[parameters('ProviderProfilingAzureBearerTokenClientId')]"
            },
            {
              "name": "providerProfilingAzureBearerTokenOptions:ClientSecret",
              "value": "[parameters('ProviderProfilingAzureBearerTokenClientSecret')]"
            },
            {
              "name": "providerProfilingClient:ApiEndpoint",
              "value": "[parameters('ProviderProfilingApiUrl')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('specsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('specsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "specs"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('scenariosFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('scenariosFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "tests"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('usersFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('scenariosFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "users"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('datasetsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "datasets"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "DatasetStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyDatasets')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "calcs"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('calcEngineApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyCalcEngine')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('externalApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyExternal')]"
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('AzureAdTenantId')]"
            },
            {
              "name": "AzureAd:Audience",
              "value": "[parameters('AzureAdAudience')]"
            },
            {
              "name": "AzureAd:Authority",
              "value": "[parameters('AzureAdAuthority')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('testEngineApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('engineHostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "scenariosClient:ApiKey",
              "value": "[parameters('ApiKeyScenarios')]"
            },
            {
              "name": "scenariosClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-scenarios.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "testresults"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyTestEngine')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('resultsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "providersourcedatasets"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyResults')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('specsApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "specs"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "resultsClient:ApiKey",
              "value": "[parameters('ApiKeyResults')]"
            },
            {
              "name": "resultsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-results.azurewebsites.net/api/')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeySpecs')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('scenariosApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "ServiceBusSettings:ConnectionString",
              "value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),variables('serviceBusNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "calcsClient:ApiKey",
              "value": "[parameters('ApiKeyCalcs')]"
            },
            {
              "name": "calcsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-calcs.azurewebsites.net/api/')]"
            },
            {
              "name": "specificationsClient:ApiKey",
              "value": "[parameters('ApiKeySpecs')]"
            },
            {
              "name": "specificationsClient:ApiEndpoint",
              "value": "[concat('https://app-', parameters('environmentKey'), '-specs.azurewebsites.net/api/')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "tests"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyScenarios')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('usersApiAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "use32BitWorkerProcess": false,
          "http20Enabled": true,
          "phpVersion": "",
          "pythonVersion": "",
          "nodeVersion": "",
          "httpsOnly": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsOptions:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "RedisSettings:CacheConnection",
              "value": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            },
            {
              "name": "CosmosDbSettings:ConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "CosmosDbSettings:DatabaseName",
              "value": "calculate-funding"
            },
            {
              "name": "CosmosDbSettings:CollectionName",
              "value": "users"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "GMT Standard Time"
            },
            {
              "name": "AzureStorageSettings:ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "apiKeyMiddleware:apiKey",
              "value": "[parameters('ApiKeyUsers')]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "CosmosDbConnectionString": {
      "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]",
      "type": "string"
    },
    "AppInsightsInstrumentationKey": {
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]",
      "type": "string"
    },
    "AzureSearchKey": {
      "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]",
      "type": "string"
    }
  }
}