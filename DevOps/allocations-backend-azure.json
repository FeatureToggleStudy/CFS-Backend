{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "apiManagementSku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    }
  },
  "variables": {
    "offerType": "Standard",
    "applicationInsightsName": "[concat(uniquestring(resourceGroup().name), '-ai')]",
    "apiManagementServiceName": "[concat(uniquestring(resourceGroup().name), '-api')]",
    "documentDatabaseName": "[concat(uniquestring(resourceGroup().name), '-db')]",
    "azureSearchName": "[concat(uniquestring(resourceGroup().name), '-search')]",
    "datasetsFunctionAppName": "[concat(uniquestring(resourceGroup().name), '-fapp-datasets')]",
    "resultsFunctionAppName": "[concat(uniquestring(resourceGroup().name), '-fapp-results')]",
    "specsFunctionAppName": "[concat(uniquestring(resourceGroup().name), '-fapp-specs')]",
    "engineFunctionAppName": "[concat(uniquestring(resourceGroup().name), '-fapp-engine')]",
    "hostingPlanName": "[concat(uniquestring(resourceGroup().name), '-plan')]",
    "datasetStorageAccountName": "[concat(uniquestring(resourceGroup().name), 'data')]",
    "datasetStorageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('datasetstorageAccountName'))]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().name), 'storage')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "operationsPolicyPrefix": "<policies><inbound><base/><set-query-parameter name=\"code\" exists-action=\"override\"><value>",
    "operationsPolicySuffix": "</value></set-query-parameter></inbound></policies>"

  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "name": "[variables('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('datasetsFunctionAppName')]",
        "[variables('resultsFunctionAppName')]",
        "[variables('engineFunctionAppName')]",
        "[variables('specsFunctionAppName')]"

      ],
      "tags": {},
      "sku": {
        "name": "[parameters('apiManagementSku')]",
        "capacity": "1"
      },
      "properties": {
        "publisherEmail": "matt.hammond@education.gov.uk",
        "publisherName": "ESFA"
      },
      "resources": [

        {
          "apiVersion": "2017-03-01",
          "type": "products",
          "name": "internalProduct",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Internal Product",
            "description": "Description for internal product",
            "terms": "Terms for internal product",
            "subscriptionRequired": true,
            "approvalRequired": false,
            "subscriptionsLimit": 1,
            "state": "published"
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "apis",
              "name": "datasets-api",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/datasets-api')]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/internalProduct')]"
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "apis",
              "name": "engine-api",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api')]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/internalProduct')]"
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "apis",
              "name": "results-api",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/internalProduct')]"
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "apis",
              "name": "specs-api",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/products/internalProduct')]"
              ]
            }
          ]
        },

        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "datasets-api",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Dataset API",
            "description": "Provides support for managing source datasets",
            "serviceUrl": "[concat('https://', variables('datasetsFunctionAppName'),'.azurewebsites.net/api')]",
            "path": "api/v1/datasets",
            "protocols": [
              "HTTPS"
            ]
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-healthcheck",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/datasets-api')]"
              ],
              "properties": {
                "displayName": "GET Health Check",
                "method": "GET",
                "urlTemplate": "/health-check",
                "description": "Gets the API health and version"
              }
            }

          ]
        },



        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "specs-api",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Specs API",
            "description": "Provides support for creating and accessing specs, calculations and tests",
            "serviceUrl": "[concat('https://', variables('specsFunctionAppName'),'.azurewebsites.net/api')]",
            "path": "api/v1/specs",
            "protocols": [
              "HTTPS"
            ]
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-healthcheck",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "GET Health Check",
                "method": "GET",
                "urlTemplate": "/health-check",
                "description": "Gets the API health and version"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/get-healthcheck')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'health-check'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-budget",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "GET Budgets",
                "method": "GET",
                "urlTemplate": "/budgets",
                "description": "Gets a single budget or list of budgets"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/get-budget')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'budgets'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "post-budget",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "POST Budget",
                "method": "POST",
                "urlTemplate": "/budgets",
                "description": "Create or update a budget"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/post-budget')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'budgets'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },

            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-product",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "GET Products",
                "method": "GET",
                "urlTemplate": "/products",
                "description": "Gets a single product"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/get-product')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'products'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "post-product",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "POST Product",
                "method": "POST",
                "urlTemplate": "/products",
                "description": "Create or update a product"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/post-product')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'products'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-allocation-line",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "GET Allocation Lines",
                "method": "GET",
                "urlTemplate": "/allocation-lines",
                "description": "Gets a single allocation line"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/get-allocation-line')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'allocation-lines'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "post-allocation-line",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]"
              ],
              "properties": {
                "displayName": "POST Allocation Line",
                "method": "POST",
                "urlTemplate": "/allocation-lines",
                "description": "Create or update a allocation line"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/specs-api/operations/post-allocation-line')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('specsFunctionAppName'), 'products'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            }
          ]
        },
        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "results-api",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Results API",
            "description": "Provides support for retrieving results of allocations and tests",
            "serviceUrl": "[concat('https://', variables('resultsFunctionAppName'),'.azurewebsites.net/api')]",
            "path": "api/v1/results",
            "protocols": [
              "HTTPS"
            ]
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-healthcheck",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]"
              ],
              "properties": {
                "displayName": "GET Health Check",
                "method": "GET",
                "urlTemplate": "/health-check",
                "description": "Gets the API health and version"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api/operations/get-healthcheck')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('resultsFunctionAppName'), 'health-check'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-budget-results",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]"
              ],
              "properties": {
                "displayName": "GET Budget Results",
                "method": "GET",
                "urlTemplate": "/budgets",
                "description": "Create or update a budget"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api/operations/get-budget-results')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('resultsFunctionAppName'), 'budgets'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },

            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-product-tests",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]"
              ],
              "properties": {
                "displayName": "GET Product Test Results",
                "method": "GET",
                "urlTemplate": "/product-tests",
                "description": "Return and filter the product test results"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/results-api/operations/get-product-tests')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('resultsFunctionAppName'), 'product-tests'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            }
          ]
        },



        {
          "apiVersion": "2017-03-01",
          "type": "apis",
          "name": "engine-api",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
          ],
          "properties": {
            "displayName": "Engine API",
            "description": "Provides support for running and previewing allocations and tests",
            "serviceUrl": "[concat('https://', variables('engineFunctionAppName'),'.azurewebsites.net/api')]",
            "path": "api/v1/engine",
            "protocols": [
              "HTTPS"
            ]
          },
          "resources": [
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "get-healthcheck",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api')]"
              ],
              "properties": {
                "displayName": "GET Health Check",
                "method": "GET",
                "urlTemplate": "/health-check",
                "description": "Gets the API health and version"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api/operations/get-healthcheck')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('engineFunctionAppName'), 'health-check'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            },
            {
              "apiVersion": "2017-03-01",
              "type": "operations",
              "name": "post-preview",
              "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api')]"
              ],
              "properties": {
                "displayName": "POST preview",
                "method": "POST",
                "urlTemplate": "/preview",
                "description": "Preview results for a given calculation"
              },
              "resources": [
                {
                  "apiVersion": "2017-03-01",
                  "type": "policies",
                  "name": "policy",
                  "dependsOn": [
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api')]",
                    "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/apis/engine-api/operations/post-preview')]"
                  ],
                  "properties": {
                    "policyContent": "[concat(variables('operationsPolicyPrefix'), listsecrets(resourceId('Microsoft.Web/sites/functions', variables('engineFunctionAppName'), 'preview'), '2015-08-01').key, variables('operationsPolicySuffix'))]"
                  }
                }
              ]
            }


          ]
        }
      ]



    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "properties": {
        "appType": "other"
      }

    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('documentDatabaseName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('documentDatabaseName')]",
        "databaseAccountOfferType": "[variables('offerType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "apiVersion": "2015-02-28",
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Azure Search"
      },
      "properties": {
        "sku": {
          "name": "basic"
        },
        "replicaCount": "1",
        "partitionCount": "1"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('datasetStorageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('datasetsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('datasetStorageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('datasetsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "CosmosDBConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServicePrimaryKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "DatasetStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('datasetStorageAccountName'), ';AccountKey=', listKeys(variables('datasetStorageAccountid'),'2015-05-01-preview').key1)]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('resultsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('resultsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "CosmosDBConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServicePrimaryKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('specsFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('specsFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "CosmosDBConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServicePrimaryKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('engineFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('documentDatabaseName'))]",
        "[variables('applicationInsightsName')]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('engineFunctionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~.2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "CosmosDBConnectionString",
              "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServicePrimaryKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "CosmosDbConnectionString": {
      "value": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('documentDatabaseName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('documentDatabaseName')), '2015-04-08').primaryMasterKey, ';')]",
      "type": "string"
    },
    "AppInsightsInstrumentationKey": {
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2014-04-01').InstrumentationKey]",
      "type": "string"
    },
    "AzureSearchKey":{
      "value":  "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]",
      "type": "string"
    }

  }

}